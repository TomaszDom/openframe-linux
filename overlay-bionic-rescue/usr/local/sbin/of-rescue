#! /bin/bash

## of-rescue v1.00 (22nd August 2018)
##  Recovers content from the /media partition of an OpenFrame's internal memory.

COLOUR=6
HAPPYSTOP=10
SADSTOP=60
DEBUG=0

tput cnorm

if [[ "$USER" != "root" ]]; then
	echo "Must be run as root."
	exit 1
fi

/usr/bin/amixer -c 0 sset "Master" 20% unmute &>/dev/null

header() {

	setterm -powersave off
	setterm -blank 0

	clear
	echo
	echo
	tput setaf $COLOUR
	echo "                                                             OpenFrame File Rescue System v1.00"
	[ $DEBUG -eq 0 ] && echo "==============================================================================================="
	[ $DEBUG -ne 0 ] && echo "====== DEBUG =================================================================================="
	echo "                                                                             birdslikewires.net"
	echo
	tput setab $COLOUR
	tput setaf 0
	tput sgr0
	echo
	echo

}

countdown() {
	MSG="$1"
	SEC=$2
	tput civis
	while [ $SEC -gt 0 ]; do
		echo -ne "$MSG in $SEC\033[0K\r"
		sleep 1
		: $((SEC--))
	done
	echo -e "$MSG now..."
	tput cnorm
}

droptoshell() {

	counter=15
	counterest=$((counter*2))

	echo -n "Stalling for network (approximately $counterest seconds)..."
	until ping -c 1 -W 1 1.1.1.1 &>/dev/null
	do
		[ $counter -eq 0 ] && break
		sleep 1;
		let counter-=1
	done

	if [ $counter -eq 0 ]; then
		NETWORKUP=0
		echo " not available."
		echo
		countdown "Moving on" $1
		sleep 1
		clear
	else
		NETWORKUP=1
		echo " network ready."
		echo -n "Fetching network time..."
		ntpdate 0.pool.ntp.org 1.pool.ntp.org 2.pool.ntp.org 3.pool.ntp.org 2>&1 >/dev/null
		echo " done."
		echo
		countdown "Dropping to shell" $1
		sleep 1
		clear
		ifconfig eth0 | grep inet | grep -v inet6 | sed 's/^ *//'
		tput sgr0
		echo
	fi

}

shutitdown() {

	tput sgr0
	echo
	echo
	read -s -t $1 -n 1 -p "Press any key for a login prompt, or wait $1 seconds for shutdown..." GOTOLOGIN

	echo > /etc/udev/rules.d/70-persistent-net.rules

	if [[ "$GOTOLOGIN" != "" ]]; then
		echo
		droptoshell 3
		sleep 1
		exit 0
	else
		echo
		echo
		echo "This OpenFrame is about to shut down."
		echo
		countdown "Shutting down" 10
		sleep 1
		echo
		echo
		[ $DEBUG -eq 0 ] && poweroff || exit 0
	fi

}

header

if [ -e /dev/mmcblk0p4 ]; then

	[ ! -d /boot/recovered ] && mkdir /boot/recovered
	echo "Found the internal memory."
	echo
	echo -n "Mounting storage partition..."
	mount /dev/mmcblk0p4 /mnt 
	echo " done."
	FILESFOUND=`ls /mnt/media/ | wc -l`
	if [ $FILESFOUND -gt 0 ]; then
		echo "Found $FILESFOUND files in the media directory."
	else
		tput setaf 1
		echo "No files were found in the media directory. Attempting recovery regardless."
		tput sgr0
	fi
	echo
	echo -n "Copying media directory to USB stick..."
	cp -R /mnt/media /boot/recovered/
	umount /mnt
	echo " done."
	echo
	echo
	tput setaf 3
	echo "    The file recovery process is complete."
	echo
	echo "    Please wait while your OpenFrame shuts down, then connect the USB device to your computer."
	echo "    Any rescued files will be in the 'recovered' directory on the 'resc-boot' volume."

	shutitdown $HAPPYSTOP

else

	echo "Cannot find the expected internal memory structure."
	echo
	echo
	tput setaf 3
	echo "    This file recovery system cannot detect the internal memory which would hold your files."
	echo "    The following internal MMC structure was detected:"
	echo
	tput setaf 0
	tput sgr0
	MMCSTRUCT=`ls /dev/mmcblk1* 2>&1`
	[[ "$MMCSTRUCT" =~ "cannot access" ]] && MMCSTRUCT="No recognised internal memory has been detected."
	echo "        "$MMCSTRUCT
	tput setaf 3
	echo
	echo -n "    Please visit "
	tput setaf $COLOUR
	echo -n "birdslikewires.net/help"
	tput setaf 3
	echo " for advice."

	shutitdown $SADSTOP

fi

exit 0
