#!/usr/bin/env bash

# of-install v1.02 (19th March 2020)
#  Simple installers for software on OpenFrames.

### Configuration #####
KERNELURL="https://birdslikewires.net/download/openframe/kernel"
#######################

if [[ "$USER" != "root" ]]; then
  echo "You need to run this with superuser privileges."
  exit 1
fi

if [[ "$#" -lt 1 ]]; then
	echo "Usage: $0 < build | xorg >"
	exit 0
fi

### Setup

source /etc/lsb-release
KERNMAJVER=$(uname -r | awk -F. '{print $1}')
KERNMIDVER=$(uname -r | awk -F. '{print $2}')
KERNMINVER=$(uname -r | awk -F. '{print $3}')

### Installers

build() {

	KERNELFETCHURL=""$KERNELURL"/"$KERNMAJVER"."$KERNMIDVER"/$(uname -r)/"
	echo $KERNELFETCHURL

	echo -n "Downloading $(uname -r) kernel packages..."
	mkdir -p /tmp/$(uname -r)
	if wget -q -r -l1 -nd -N -np -A.deb -erobots=off -P /tmp/$(uname -r) $KERNELFETCHURL; then

		echo " done."
		echo "Installing headers..."
		dpkg -i /tmp/$(uname -r)/linux-headers*.deb
		echo "Installing build-essential..."
		apt-get update
		apt-get -y install build-essential
		echo "Complete!"
		exit 0

	else

		echo "Download failed."
		exit 1

	fi

	sync
	echo "Build install complete."

}

squeezeplay() {

	#useradd -s /bin/false -r squeezeplay

	exit 0

}

xorg() {

	rm /etc/X11/app-defaults/XTerm &>/dev/null
	apt-get -y install xserver-xorg x11-utils xinit xterm
	echo

	if [[ "$@" == "mplayer" ]]; then
		echo "Installing mplayer..."
		echo
		apt-get -y install mplayer
		echo -e "\n###OpenFrame Specific\nvo=x11\nva=x11\nao=alsa\nzoom=yes\nfs=yes" >> /etc/mplayer/mplayer.conf
		echo -e "\n###OpenFrame Specific\nMOUSE_BTN0_DBL quit\nMOUSE_BTN0-MOUSE_BTN0_DBL quit" >> /etc/mplayer/input.conf
		echo
	fi

	echo "Setting XTerm geometry..."
	echo "*xterm*geometry: 132x36+0+0" > /etc/X11/app-defaults/XTerm
	echo

	if ! grep -q startx /etc/profile; then
		echo "Enabling Xorg at tty1 login..."
		echo -e "\nif [[ "'$(tty)'" = /dev/tty1 ]]; then\n  exec /usr/bin/startx &>/dev/null\nfi\n" >> /etc/profile
		echo
	fi

	sync
	echo "Xorg install complete."

}

### Triggers

echo "Installing $@..."
echo
/usr/bin/apt update
[[ "$@" =~ "build" ]] && build
[[ "$@" =~ "xorg" ]] && xorg

exit 0
