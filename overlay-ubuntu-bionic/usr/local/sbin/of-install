#!/usr/bin/env bash

# of-install v1.06 (29th April 2020)
#  Simple installers for software on OpenFrames.

if [[ "$USER" != "root" ]]; then
  echo "You need to run this with superuser privileges."
  exit 1
fi

if [[ "$#" -lt 1 ]]; then
	echo "Usage: $0 <option> [options]"
	echo
	echo "  build        :  Installs kernel headers and essential build components."
	echo "  squeezeplay  :  Installs SqueezePlay and the X.Org Server."
	echo "  xserver      :  Installs the X.Org Server."
	echo
	exit 1
fi

### Setup

source /etc/lsb-release
KERNMAJVER=$(uname -r | awk -F. '{print $1}')
KERNMIDVER=$(uname -r | awk -F. '{print $2}')
KERNMINVER=$(uname -r | awk -F. '{print $3}')

### Installers

build() {

	### Configuration #####
	KERNELSERVER="https://birdslikewires.net/download/openframe/kernel"
	#######################

	KERNELFETCHURL=""$KERNELSERVER"/"$KERNMAJVER"."$KERNMIDVER"/$(uname -r)/"
	echo $KERNELFETCHURL

	echo -n "Downloading $(uname -r) kernel packages..."
	mkdir -p /tmp/$(uname -r)
	if wget -q -r -l1 -nd -N -np -A.deb -erobots=off -P /tmp/$(uname -r) $KERNELFETCHURL; then

		echo " done."
		echo "Installing headers..."
		dpkg -i /tmp/$(uname -r)/linux-headers*.deb
		echo "Installing build-essential..."
		apt-get update
		apt-get -y install build-essential
		echo "Complete!"
		exit 0

	else

		echo "Download failed."
		exit 1

	fi

	sync
	echo "Build install complete."

}

squeezeplay() {

	### Configuration #####
	SQPSERVER="https://birdslikewires.net/download/openframe/squeezeplay/v7.8"
	#######################

	LATESTSQP=$(curl -s $SQPSERVER/ | grep '<a' | grep '.tgz' | grep -v '.tgz.md5' | awk -F'.tgz\">' {'print $2'} | awk -F'</' {'print $1'} | tail -1)

	[ -d /opt/squeezeplay ] && rm -rf /opt/squeezeplay

	wget -P /tmp $SQPSERVER/$LATESTSQP
	wget -P /tmp $SQPSERVER/$LATESTSQP.md5

	TGZHASH=$(cat /tmp/$LATESTSQP.md5 | awk -F' ' {'print $1'})
	OURHASH=$(md5sum /tmp/$LATESTSQP | awk -F' ' {'print $1'})

	echo $TGZHASH
	echo $OURHASH
	echo

	if [[ ! "$OURHASH" == "$TGZHASH" ]]; then

		echo "Checksum mismatch. Bailing!"
		rm /tmp/squeezeplay-*.tgz*
		exit 1

	else

		echo "Checksums match, continuing..."

		# Create a standard user 'squeezeplay' with no configured password.
		id -u squeezeplay &>/dev/null || useradd -s /bin/bash --create-home squeezeplay
		adduser squeezeplay audio &>/dev/null
		adduser squeezeplay users &>/dev/null
		adduser squeezeplay video &>/dev/null

		# Install SqueezePlay with 'squeezeplay' user permissions.
		mkdir /opt/squeezeplay
		chown squeezeplay:audio /opt/squeezeplay
		sudo -u squeezeplay tar -C /opt/squeezeplay -zxf /tmp/$LATESTSQP

		# Configure the system to autologin and run SqueezePlay on startup.
		of-settings autologin squeezeplay
		of-settings autorunx squeezeplay "/opt/squeezeplay/bin/squeezeplay.sh"

		# Tidy up.
		rm /tmp/squeezeplay-*.tgz*
		sync
		echo
		echo "SqueezePlay installation complete."

	fi

	exit 0

}

xserver() {

	rm /etc/X11/app-defaults/XTerm &>/dev/null
	apt-get -y install xserver-xorg x11-utils xinit xterm
	echo

	if [[ "$@" == "mplayer" ]]; then
		echo "Installing mplayer..."
		echo
		apt-get -y install mplayer
		echo -e "\n###OpenFrame Specific\nvo=x11\nva=x11\nao=alsa\nzoom=yes\nfs=yes" >> /etc/mplayer/mplayer.conf
		echo -e "\n###OpenFrame Specific\nMOUSE_BTN0_DBL quit\nMOUSE_BTN0-MOUSE_BTN0_DBL quit" >> /etc/mplayer/input.conf
		echo
	fi

	echo "Setting XTerm geometry..."
	echo "*xterm*geometry: 132x36+0+0" > /etc/X11/app-defaults/XTerm
	echo

	if ! grep -q startx /etc/profile; then
		echo "Enabling Xorg at tty1 login..."
		echo -e "\nif [[ "'$(tty)'" = /dev/tty1 ]]; then\n  exec /usr/bin/startx &>/dev/null\nfi\n" >> /etc/profile
		echo
	fi

	sync
	echo "Xorg install complete."

}

### Triggers

echo "Installing $@..."
echo
[[ "$@" =~ "build" ]] && /usr/bin/apt update && build
[[ "$@" =~ "squeezeplay" ]] && /usr/bin/apt update && xserver && squeezeplay
[[ "$@" =~ "xserver" ]] && /usr/bin/apt update && xserver

exit 0
